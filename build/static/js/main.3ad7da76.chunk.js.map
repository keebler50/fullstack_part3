{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/PersonService.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","filter","handleFilterChange","onChange","Person","person","handlePersonDelete","key","id","name","number","onClick","Persons","persons","rows","toLowerCase","indexOf","map","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","baseUrl","axios","get","then","response","data","personObject","post","delete","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","class","notification","setNotification","useEffect","PersonService","initialPersons","event","target","preventDefault","p","length","alert","existingPerson","find","window","confirm","updatedPerson","setTimeout","catch","error","returnedPerson","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ad7da76.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => {\n\n    return (\n        <div>filter shown with <input\n            filter={filter} \n            onChange={handleFilterChange} /></div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Person = (person, handlePersonDelete) => {\n    return (\n        <div key={person.id}>{person.name} {person.number} <button onClick={() => handlePersonDelete(person)}>delete</button></div>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, filter, handlePersonDelete }) => {\n    const rows = persons\n        .filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n        .map((person) => Person(person, handlePersonDelete))\n\n    return (\n        <>\n            {rows}\n        </>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input\n                    value={newName}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(response => response.data)\n}\n\nconst create = personObject => {\n    return axios\n        .post(baseUrl, personObject)\n        .then(response => response.data)\n}\n\nconst remove = id => {\n    return axios\n        .delete(baseUrl + `/${id}`)\n}\n\nconst update = personObject => {\n    return axios\n        .put(baseUrl + `/${personObject.id}`, personObject)\n        .then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if (!message) {\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport Persons from './Persons'\nimport PersonForm from './PersonForm'\nimport PersonService from '../services/PersonService'\nimport Notification from './Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState({ message: null, class: null })\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const handlePersonDelete = (person) => {\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            PersonService\n                .remove(person.id)\n                .then(() => setPersons(persons.filter(p => p.id !== person.id)))\n        }\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        // look for dupes\n        if (persons.filter(p => p.name === newName && p.number === newNumber).length > 0) {\n            alert(`${newName} is already added to phonebook`)\n            return\n        }\n\n        const existingPerson = persons.find(p => p.name === newName)\n\n        if (existingPerson) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                PersonService\n                    .update({ ...existingPerson, number: newNumber })\n                    .then(updatedPerson => {\n                        setNotification({\n                            message: `Updated ${updatedPerson.name}`,\n                            class: 'notification'\n                        })\n                        setTimeout(() => {\n                            setNotification({\n                                message: null, class: null\n                            })\n                        }, 5000)\n                        setPersons(persons.map(person => person.id !== existingPerson.id ? person : updatedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        setNotification({\n                            message: `Information of ${existingPerson.name} has already been removed from server`, class: 'error'\n                        })\n                        setTimeout(() => {\n                            setNotification({ message: null, class: null })\n                        }, 5000)\n                    })\n                return\n            }\n            return\n        }\n\n        const personObject = {\n            id: null,\n            name: newName,\n            number: newNumber\n        }\n\n        PersonService\n            .create(personObject)\n            .then(returnedPerson => {\n                setNotification({\n                    message: `Added ${returnedPerson.name}`,\n                    class: 'notification'\n                })\n                setTimeout(() => {\n                    setNotification({\n                        message: null,\n                        class: null\n                    })\n                }, 5000)\n                setPersons(persons.concat(returnedPerson))\n                setNewName('')\n                setNewNumber('')\n            })\n            .catch(error => {\n                console.log(error.response.data)\n                setNotification({\n                    message: error.response.data.error,\n                    class: 'error'\n                })\n                setTimeout(() => {\n                    setNotification({\n                        message: null,\n                        class: null\n                    })\n                }, 5000)\n              })\n    }\n\n    useEffect(() => {\n        PersonService.getAll().then((initialPersons) => {\n            setPersons(initialPersons)\n        })\n    }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification className={notification.class} message={notification.message} />\n\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n            <h2>add a new</h2>\n            <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <h2>Numbers</h2>\n            <Persons persons={persons} filter={filter} handlePersonDelete={handlePersonDelete} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}